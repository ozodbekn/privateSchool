// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Parents {
  id                 Int       @id @default(autoincrement())
  full_name          String    @db.VarChar(50)
  email              String    @unique @db.VarChar(50)
  hashedPassword     String
  phone_number       String    @unique @db.VarChar(50)
  hashedRefreshToken String?
  activationLink     String?  @default(uuid())
  is_active          Boolean   @default(false)
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  students           Students? @relation(fields: [studentsId], references: [id])
  studentsId         Int?
}

model Admins {
  id                 Int      @id @default(autoincrement())
  full_name          String   @db.VarChar(50)
  email              String   @unique @db.VarChar(50)
  hashedPassword     String
  phone_number       String   @unique @db.VarChar(50)
  hashedRefreshToken String?
  activationLink     String?  @unique @default(uuid())
  is_active          Boolean  @default(false)
  is_creator         Boolean  @default(false)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model Directors {
  id                 Int      @id @default(autoincrement())
  full_name          String   @db.VarChar(50)
  ID              String   @unique @db.VarChar(50)
  hashedPassword     String
  phone_number       String   @unique @db.VarChar(50)
  image              String   @db.VarChar(50)
  hashedRefreshToken String?
  is_main            Boolean  @default(false)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model Students {
  id                 Int                  @id @default(autoincrement())
  full_name          String               @db.VarChar(50)
  ID              String               @unique @db.VarChar(50)
  hashedPassword              String        
  birthyear          String               @db.VarChar(50)
  hashedRefreshToken String?
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  parents            Parents[]
  studentAttenddance StudentAttenddance[]

  @@map("students")
}

model Teachers {
  id                 Int      @id @default(autoincrement())
  full_name          String   @db.VarChar(50)
  ID                 String   @unique @db.VarChar(50)
  hashedPassword     String
  phone_number       String   @db.VarChar(50)
  hashedRefreshToken String?
  diplom             String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  @@map("teachers")
}

model StudentAttenddance {
  id         Int          @id @default(autoincrement())
  studentsId Int?
  reason     String?
  status     AttendStatus
  date_time  DateTime     @default(now())
  Students   Students?    @relation(fields: [studentsId], references: [id])
}

enum AttendStatus {
  KELGAN
  SABABSIZ_KELMAGAN
  SABABLI_KELMAGAN
}
